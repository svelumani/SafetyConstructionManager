version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=saftery_db
    ports:
      - "5436:5432"
    volumes:
      - postgres_safety_data:/var/lib/postgresql/data
    networks:
      - mysafety-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MySafety Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/saftery_db
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      # Email configuration (optional)
      # SMTP_HOST: your-smtp-host
      # SMTP_PORT: 587
      # SMTP_USER: your-email@domain.com
      # SMTP_PASS: your-email-password
      # SMTP_FROM: MySafety <noreply@yourdomain.com>
    ports:
      - "5005:5000"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - mysafety-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_safety_data:

networks:
  mysafety-network:
    driver: bridge